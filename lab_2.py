import telebot
from telebot import types
import requests

weather_api_key = '2cc213560a984e94aa274022251109'

bot = telebot.TeleBot('8254669891:AAE7ePtIM_oc9VTWcdRNtbFehEO8zV4SoPo')

user_states = {}  # user_states[user_id] = 'waiting_for_city'

def menu(message, first_time=False):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('‚ö° –û –±–æ—Ç–µ ‚ö°')
    btn2 = types.KeyboardButton('‚òÄÔ∏è –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ‚òÄÔ∏è')
    btn3 = types.KeyboardButton('‚Ü©Ô∏è –í—ã—Ö–æ–¥ ‚Ü©Ô∏è')
    markup.row(btn1)
    markup.row(btn2,btn3)

    if first_time:
        bot.send_message(
            message.chat.id,
            f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –º–æ–≥—É:\n'
            '1. –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ\n'
            '2. –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üå§'
            '3. –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            parse_mode='Markdown'
        )

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup
    )



@bot.message_handler(commands=['start', 'hello', '–ü—Ä–∏–≤–µ—Ç'])
def start(message):
    user_states[message.from_user.id] = None  # —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    menu(message, first_time=True)


@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    user_id = message.from_user.id
    text = message.text.strip()

    if user_states.get(user_id) == 'waiting_for_city':
        if text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
            user_states[user_id] = None
            menu(message)
        else:
            get_city_and_show_weather(message)
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    if text == '‚ö° –û –±–æ—Ç–µ ‚ö°':
        about_bot(message)
    elif text == '‚òÄÔ∏è –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ‚òÄÔ∏è':
        ask_for_city(message)
    elif text=='‚Ü©Ô∏è –í—ã—Ö–æ–¥ ‚Ü©Ô∏è':
        exit_bot(message)
    elif text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        user_states[user_id] = None
        menu(message,first_time=False)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.", reply_markup=get_menu_markup())


def about_bot(message):
    bot.send_message(
        message.chat.id,
        f'–ë–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —É–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è –≤–∞—Å –∏ –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö üåπ\n'
        '–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É" –∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ ‚Äî —è —Å–∫–∞–∂—É, –∫–∞–∫–∞—è –±—É–¥–µ—Ç –ø–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞!'
    )
    menu(message)


def ask_for_city(message):
    user_states[message.from_user.id] = 'waiting_for_city'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
    markup.add(btn)
    bot.send_message(
        message.chat.id,
        'üåÜ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—Å–∫–≤–∞, –õ–æ–Ω–¥–æ–Ω, –¢–æ–∫–∏–æ):',
        reply_markup=markup
    )


def get_city_and_show_weather(message):
    city = message.text.strip()
    user_id = message.from_user.id

    if not city or city == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é':
        bot.send_message(message.chat.id, "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return

    url = "http://api.weatherapi.com/v1/forecast.json"
    params = {
        'key': weather_api_key,
        'q': city,
        'days': 2,
        'lang': 'ru',
        'aq': 'no'
    }

    try:
        response = requests.get(url, params=params)
        data = response.json()

        if response.status_code != 200:
            error_msg = data.get('error', {}).get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")
            menu(message,first_time=False)
            return

        forecast = data['forecast']['forecastday'][1]
        day = forecast['day']
        location = data['location']['name']
        country = data['location']['country']

        avg_temp = day['avgtemp_c']
        max_temp = day['maxtemp_c']
        min_temp = day['mintemp_c']
        condition = day['condition']['text']
        chance_of_rain = day['daily_chance_of_rain']
        humidity = day['avghumidity']

        emoji = ("üå§" if "—è—Å–Ω–æ" in condition.lower() else
                 "üåß" if "–¥–æ–∂–¥—å" in condition.lower() or "–ª–∏–≤–µ–Ω—å" in condition.lower() else
                 "‚òÅÔ∏è" if "–æ–±–ª–∞—á–Ω–æ" in condition.lower() else "üå®")

        weather_msg = (
            f"{emoji} **–ü–æ–≥–æ–¥–∞ –≤ {location}, {country} –Ω–∞ –∑–∞–≤—Ç—Ä–∞:**\n\n"
            f"üå° –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {avg_temp}¬∞C\n"
            f"üìà –ú–∞–∫—Å–∏–º—É–º: {max_temp}¬∞C | –ú–∏–Ω–∏–º—É–º: {min_temp}¬∞C\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"‚òî –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: {chance_of_rain}%\n"
            f"üìù –£—Å–ª–æ–≤–∏—è: {condition.capitalize()}"
        )

        bot.send_message(message.chat.id, weather_msg, parse_mode='Markdown')

    except requests.exceptions.RequestException:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–≥–æ–¥—ã.")
    except KeyError:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
    finally:
        user_states[user_id] = None
        menu(message, first_time=False)


def get_menu_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'))
    return markup

@bot.message_handler(commands=['exit', 'stop', 'end'])
def exit_bot(message):
    user_id = message.from_user.id
    user_states[user_id] = None
    remove_markup = types.ReplyKeyboardRemove()  # —É–±–∏—Ä–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(
        message.chat.id,
        f"–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á, {message.from_user.first_name}!\n"
        "–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start",
        reply_markup=remove_markup
    )


bot.polling(non_stop=True)
